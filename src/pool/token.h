#include <stdint.h>

#ifndef TOKEN_H
#define TOKEN_H

typedef enum {
  TOKEN_TYPE_IDENTIFIER,
  TOKEN_TYPE_KEYWORD,
  TOKEN_TYPE_INTEGER,
  TOKEN_TYPE_STRING,
  TOKEN_TYPE_PREFIX,
  TOKEN_TYPE_SYMBOL,
  TOKEN_TYPE_LPAREN,
  TOKEN_TYPE_RPAREN,
  TOKEN_TYPE_LBRACE,
  TOKEN_TYPE_RBRACE,
  TOKEN_TYPE_SEMICOLON,
  TOKEN_TYPE_COLON,
  TOKEN_TYPE_LBRACKET,
  TOKEN_TYPE_RBRACKET,
  TOKEN_TYPE_COMMA,
  TOKEN_TYPE_HASH,
  TOKEN_TYPE_SLASH,
  TOKEN_TYPE_INC,
  TOKEN_TYPE_DEC,
  TOKEN_TYPE_EQ,
  TOKEN_TYPE_NEQ,
  TOKEN_TYPE_LTE,
  TOKEN_TYPE_GTE,
  TOKEN_TYPE_AND,
  TOKEN_TYPE_OR,
  TOKEN_TYPE_LSHIFT,
  TOKEN_TYPE_RSHIFT,
  TOKEN_TYPE_ASTERISK,
  TOKEN_TYPE_PLUS,
  TOKEN_TYPE_MINUS,
  TOKEN_TYPE_ASSIGN,
  TOKEN_TYPE_BANG,
  TOKEN_TYPE_LT,
  TOKEN_TYPE_GT,
  TOKEN_TYPE_AMP,
  TOKEN_TYPE_PIPE,
  TOKEN_TYPE_CARET,
  TOKEN_TYPE_TILD,
  TOKEN_TYPE_PERCENT
} token_type_t;

struct symbol_entry{
  const char *value;
  token_type_t type;
};

typedef struct {
  char *value;
  token_type_t type;
  uint32_t pos;
  uint32_t len;
} token_t;

#endif